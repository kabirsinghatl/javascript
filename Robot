/*

    
    ----------------------------------------------------------------------------
    
    Image design from:
    http://clipartmag.com/download-clipart-image#pictures-of-cartoon-robots-1.jpg
*/

var Scene = function() {
    this.draw = function() {
        noStroke();
        fill(120, 120, 105);
        rect(0, 540, 600, 60);
    };
};
var Robot = function() {
    //colors
    this.dark = color(3, 112, 110);
    this.medium = color(0, 133, 128);
    this.mediumlight = color(0, 155, 152);
    this.light = color(145, 216, 212);
    this.lightest = color(173, 223, 220);
    this.shade = color(122, 202, 199);
    
    //rotate arms
    this.righttop = 0;
    this.rightbottom = 0;
    this.righthand = 0;
    this.rightfingers = 0;
    this.lefttop = 0;
    this.leftbottom = 0;
    this.lefthand = 0;
    this.leftfingers = 0;
    this.rightleg = 0;
    this.leftleg = 0;

    this.state = 5;
    this.timer = 0;

    this.flashopacity = 255;
    this.flashsize = 0;
    
    this.button = function(x, y) {
        fill(this.dark); //ear right shade - round
        pushMatrix();
            translate(x, y);
            pushStyle();
                ellipse(0, 0, 12, 12);
            popStyle();
        popMatrix();
        
        fill(this.shade); //ear right shade - round
        pushMatrix();
            translate(x, y);
            pushStyle();
                ellipse(1, -1, 8, 8);
            popStyle();
        popMatrix();
    };
    
    this.flash = function() {
        noStroke();

        this.flashopacity-=3;
        this.flashsize+= 1;
        
        fill(this.light, this.flashopacity);
        
        pushMatrix();
            translate(292, 77);
            rotate(30);
            triangle(0, 0 - this.flashsize * 0.5, -5, -this.flashsize, 5, -this.flashsize);
            rotate(90);
            triangle(0, 0 - this.flashsize * 0.5, -5, -this.flashsize, 5, -this.flashsize);
            rotate(90);
            triangle(0, 0 - this.flashsize * 0.5, -5, -this.flashsize, 5, -this.flashsize);
            rotate(90);
            triangle(0, 0 - this.flashsize * 0.5, -5, -this.flashsize, 5, -this.flashsize);
        popMatrix();
        
        if(this.flashopacity <= 0) {
            this.flashopacity = 255;
            this.flashsize = 0;
        }
    };
    
    this.update = function() {
        switch(this.state) {
            case 0:
                this.righttop = constrain(this.righttop + 0.5, 0, 20);
                this.lefttop = constrain(this.lefttop - 0.5, -20, 0);
                this.rightbottom = constrain(this.rightbottom - 0.5, -20, 0);
                this.leftbottom = constrain(this.leftbottom + 0.5, 0, 20);
                if(this.righttop >= 20) {
                    this.state++;                }
                break;
            case 1:
                this.righttop = constrain(this.righttop - 0.5, 0, 20);
                this.rightbottom = constrain(this.rightbottom + 0.5, -20, 0);
                this.leftbottom = constrain(this.leftbottom + 0.5, 0, 40);
                if(this.righttop <= 0) {
                    if(this.timer++ === 180) {
                        this.timer = 0;
                        this.state++;
                    }
                }
                break;
            case 2:
                this.righttop = constrain(this.righttop + 1, 0, 50);
                if(this.righttop >= 50) {
                    this.state++;                }
                break;
            case 3:
                this.rightbottom = constrain(this.rightbottom + 1.5, 0, 110);
                if(this.rightbottom >= 110) {
                    this.state++;
                }
                break;
            case 4:
                this.righthand+= sin(frameCount * 10) * 1;
                this.rightfingers+= sin(frameCount * 10) * 1;
                
                if(this.timer++ >= 240) {
                    this.righttop = constrain(this.righttop - 1, 0, 50);
                    this.rightbottom = constrain(this.rightbottom - 1, 0, 110);
                    this.righthand = constrain(this.righthand - 1, 0, 100);
                    this.rightfingers = constrain(this.rightfingers - 1, 0, 100);
                    
                    this.lefttop = constrain(this.lefttop + 0.5, -50, 0);
                    this.leftbottom = constrain(this.leftbottom - 0.5, 0, 40);
                    
                    if(this.righttop + this.rightbottom + this.righthand + this.rightfingers === 0) {
                        this.timer = 0;
                        this.state++;
                    }
                }
                break;
            case 5:
                if(this.timer++ === 240) {
                    this.timer = 0;
                    this.state = 0;
                }
                break;
        }
    };
    
    this.getRobotImage = function() {
        background(0, 0, 0, 0);
        
        noStroke();
        
        {

        pushMatrix();
            translate(0, this.rightleg);
            
            fill(this.light); //foot right top
            beginShape();
                vertex(285, 548);
                vertex(278, 565);
                vertex(324, 565);
                vertex(318, 548);
            endShape(CLOSE);
            
            fill(this.shade); //foot right bottom
            beginShape();
                vertex(278, 565);
                vertex(279, 571);
                vertex(323, 571);
                vertex(324, 565);
            endShape(CLOSE);
            
            fill(this.medium); //leg right
            beginShape();
                vertex(280, 485);
                vertex(287, 552);
                bezierVertex(297, 555, 305, 555, 315, 552);
                vertex(321, 485);
            endShape(CLOSE);
            
            fill(this.dark); //leg right shadow
            beginShape();
                vertex(280, 485);
                vertex(287, 552);
                bezierVertex(297, 555, 296, 555, 296, 552);
                vertex(296, 485);
            endShape(CLOSE);
            
            //leg right lines
            pushStyle();
                noFill();
                stroke(this.light, 100);
                beginShape(); //top
                    vertex(320, 502);
                    bezierVertex(310, 506, 292, 506, 282, 502);
                endShape();
                beginShape(); //middle
                    vertex(318, 520);
                    bezierVertex(308, 524, 294, 524, 284, 520);
                endShape();
                beginShape(); //bottom
                    vertex(316, 536);
                    bezierVertex(306, 540, 295, 540, 285, 536);
                endShape();
            popStyle();
        popMatrix();
        
        } //right leg
        
        {
        pushMatrix();
            translate(52, this.leftleg);
            
            fill(this.light); //foot left top
            beginShape();
                vertex(285, 548);
                vertex(279, 565);
                vertex(324, 565);
                vertex(318, 548);
            endShape(CLOSE);
            
            fill(this.shade); //foot left bottom
            beginShape();
                vertex(279, 565);
                vertex(280, 571);
                vertex(323, 571);
                vertex(324, 565);
            endShape(CLOSE);
            
            fill(this.medium); //leg left
            beginShape();
                vertex(281, 485);
                vertex(287, 552);
                bezierVertex(297, 555, 305, 555, 315, 552);
                vertex(322, 485);
            endShape(CLOSE);
            
            fill(this.dark); //leg left shadow
            beginShape();
                vertex(280, 485);
                vertex(287, 552);
                bezierVertex(297, 555, 296, 555, 296, 552);
                vertex(296, 485);
            endShape(CLOSE);
            
            //leg right lines
            pushStyle();
                noFill();
                stroke(this.light, 100);
                strokeWeight(1);
                beginShape(); //top
                    vertex(320, 502);
                    bezierVertex(310, 506, 292, 506, 282, 502);
                endShape();
                beginShape(); //middle
                    vertex(318, 520);
                    bezierVertex(308, 524, 294, 524, 284, 520);
                endShape();
                beginShape(); //bottom
                    vertex(316, 536);
                    bezierVertex(306, 540, 295, 540, 285, 536);
                endShape();
            popStyle();
        popMatrix();
        
        } //left leg

        {
        
        fill(this.mediumlight); //body outer
        beginShape();
            vertex(232, 340);
            vertex(406, 335);
            vertex(387, 490);
            vertex(264, 492);
        endShape(CLOSE);
        
        fill(this.light); //body inner
        beginShape();
            vertex(244, 347);
            vertex(396, 343);
            vertex(380, 480);
            vertex(272, 481);
        endShape(CLOSE);
        
        fill(this.shade); //body inner shadow
        beginShape();
            vertex(272, 481);
            bezierVertex(315, 458, 396, 343, 396, 343);
            vertex(380, 480);
        endShape(CLOSE);
        
        fill(this.lightest); //body top
        beginShape();
            vertex(260, 322);
            vertex(233, 340);
            vertex(406, 335);
            vertex(387, 320);
        endShape(CLOSE);
        
        } //body
        
        {
        
        fill(this.medium); //neck
        beginShape();
            vertex(297, 254);
            vertex(302, 326);
            bezierVertex(310, 329, 322, 329, 329, 326);
            vertex(342, 251);
        endShape(CLOSE);
        
        fill(this.dark); //neck shadow
        beginShape();
            vertex(297, 254);
            vertex(302, 326);
            bezierVertex(310, 329, 316, 329, 317, 326);
            vertex(317, 251);
        endShape(CLOSE);
        
        pushStyle();
            noFill();
            stroke(this.light, 100);
            strokeWeight(1);
            beginShape(); //neck lines top
                vertex(337, 275);
                bezierVertex(327, 279, 309, 279, 299, 276);
            endShape();
            beginShape(); //neck lines middle
                vertex(334, 292);
                bezierVertex(324, 297, 310, 297, 300, 293);
            endShape();
            beginShape(); //neck lines bottom
                vertex(331, 311);
                bezierVertex(321, 316, 311, 316, 301, 311);
            endShape();
        popStyle();
        
        } //neck

        {
        
        //Buttons
        //body
        this.button(244, 349);
        this.button(394, 345);
        this.button(379, 480);
        this.button(272, 482);
        
        } //buttons body
        
        {
        
        fill(this.shade); //ear left
        pushMatrix();
            translate(429, 166);
            rotate(-13);
            pushStyle();
                rectMode(CENTER);
                rect(0, 0, 30, 34, 0, 10, 10, 0);
            popStyle();
        popMatrix();
        
        } //left ear
        
        {
        
        fill(this.mediumlight); //face outer
        beginShape();
            vertex(184, 165);
            vertex(414, 115);
            bezierVertex(431, 154, 438, 201, 439, 244);
            vertex(219, 288);
            bezierVertex(200, 249, 190, 204, 184, 165);
        endShape(CLOSE);
        
        fill(this.light); //face inner
        beginShape();
            vertex(196, 168);
            vertex(400, 124);
            bezierVertex(414, 147, 421, 194, 423, 241);
            vertex(227, 280);
            bezierVertex(212, 249, 202, 204, 196, 168);
        endShape(CLOSE);
        
        fill(this.shade); //face inner shadow
        beginShape();
            vertex(227, 280);
            bezierVertex(300, 242, 355, 219, 400, 124);
            bezierVertex(414, 147, 421, 194, 423, 241);
        endShape(CLOSE);
        
        fill(this.light); //face top
        beginShape();
            vertex(184, 165);
            vertex(166, 155);
            vertex(400, 105);
            vertex(414, 115);
        endShape(CLOSE);
        
        fill(this.dark); //face right
        beginShape();
            vertex(184, 165);
            vertex(166, 155);
            bezierVertex(177, 216, 183, 242, 197, 273);
            vertex(219, 288);
            bezierVertex(200, 249, 190, 204, 184, 165);
        endShape(CLOSE);
        
        } //face
        
        {
        
        fill(this.shade); //ear right
        pushMatrix();
            translate(174, 220);
            rotate(-13);
            pushStyle();
                rectMode(CENTER);
                rect(0, 0, 30, 34, 12, 7, 7, 12);
            popStyle();
        popMatrix();
        
        fill(this.light); //ear right shade
        pushMatrix();
            translate(173, 216);
            rotate(-13);
            pushStyle();
                rectMode(CENTER);
                rect(0, 0, 28, 24, 12, 7, 7, 10);
            popStyle();
        popMatrix();
        
        fill(this.shade); //ear right shade - round
        pushMatrix();
            translate(164, 220);
            rotate(-16);
            pushStyle();
                ellipse(0, 0, 9, 25);
            popStyle();
        popMatrix();
        
        } //right ear
        
        {
        
        fill(this.dark); //eyebrow right
        beginShape();
            vertex(222, 180);
            vertex(249, 166);
            vertex(251, 178);
        endShape(CLOSE);
        
        fill(this.dark); //eyebrow left
        beginShape();
            vertex(365, 139);
            vertex(369, 150);
            vertex(396, 144);
        endShape(CLOSE);
        
        } //eyebrows
        
        {
        
        //right eye
        fill(255, 255, 255); //eye right outer
        ellipse(264, 223, 60, 60);
        fill(this.dark); //eye right middle
        ellipse(266, 220, 44, 44);
        fill(this.medium); //eye right inner
        ellipse(268, 217, 30, 30);
        fill(255, 255, 255); //eye right dots
        ellipse(263, 213, 11, 11);
        ellipse(275, 216, 6, 6);
        
        //left eye
        fill(255, 255, 255); //eye right outer
        ellipse(372, 198, 60, 60);
        fill(this.dark); //eye right middle
        ellipse(374, 195, 44, 44);
        fill(this.medium); //eye right inner
        ellipse(373, 193, 30, 30);
        fill(255, 255, 255); //eye right dots
        ellipse(368, 188, 11, 11);
        ellipse(380, 191, 6, 6);
        
        } //eyes
        
        {
        
        //Buttons
        //face
        this.button(197, 171);
        this.button(400, 127);
        this.button(422, 238);
        this.button(226, 278);
        
        } //buttons face
        
        {
        
        fill(this.medium); //antenna base
        beginShape();
            vertex(289, 123);
            vertex(306, 119);
            vertex(309, 129);
            bezierVertex(304, 132, 298, 133, 291, 133);
        endShape(CLOSE);
        fill(this.dark); //antenna base shadow
        beginShape();
            vertex(289, 123);
            vertex(296, 122);
            vertex(297, 129);
            bezierVertex(299, 132, 298, 133, 291, 133);
        endShape(CLOSE);
        
        fill(this.shade); //antenna base round
        pushMatrix();
            translate(298, 122);
            rotate(79);
            pushStyle();
                ellipse(0, 0, 6, 18);
            popStyle();
        popMatrix();
        
        pushStyle();
            noFill(); //antenna
            stroke(this.medium);
            strokeWeight(2);
            beginShape();
                vertex(298, 122);
                bezierVertex(300, 105, 296, 91, 292, 77);
            endShape();
        popStyle();
        
        fill(this.medium); //antenna top
        pushMatrix();
            translate(292, 77);
            pushStyle();
                ellipse(0, 0, 16, 9);
            popStyle();
        popMatrix();
        fill(this.light); //antenna top shadow
        pushMatrix();
            translate(294, 76);
            rotate(6);
            pushStyle();
                ellipse(0, 0, 10, 5);
            popStyle();
        popMatrix();
        
        } //antenna
    };
    
    this.init = function() {
        this.getRobotImage();
        this.robotImage = get(0, 0, width, height);
    };
    this.init();
    
    this.draw = function() {
        noStroke();

        {
            
            pushMatrix();
                translate(231, 352);
                rotate(17 + this.righttop);
                //top of arm
                fill(this.medium); //arm right top
                rect(-12, 0, 24, 80);
                fill(this.dark); //arm right top shadow
                rect(-3, 0, 13, 80);
                
                fill(this.light); //arm right top round
                ellipse(0, 0, 40, 40);
                
                //bottom of arm
                pushMatrix();
                    translate(0, 80);
                    rotate(-14 + this.rightbottom);
                    
                    fill(this.medium); //arm right bottom
                    rect(-12, 0, 24, 70);
                    fill(this.dark); //arm right bottom shadow
                    rect(-3, 0, 13, 70);
                    
                    fill(this.light); //arm right bottom round
                    ellipse(0, 0, 34, 34);
                    
                    //hands
                    pushMatrix();
                        translate(0, 70);
                        rotate(0 + this.righthand);
                        
                        pushStyle();
                            rectMode(CENTER);
                            fill(this.light); //hand right - light
                            rect(0, 0, 45, 25, 8);
                            fill(this.shade); //hand right - shadow
                            rect(0, 0, 41, 16, 8);
                        popStyle();
                        
                        //fingers
                        pushMatrix(); //hand right - finger right
                            translate(-10, 5);
                            rotate(0 - this.rightfingers);
                            fill(this.dark);
                            rect(-5, 0, 10, 25, 5);
                            fill(this.medium);
                            rect(0, 0, 4, 24, 5);
                        popMatrix();
                        pushMatrix(); //hand right - finger left
                            translate(10, 5);
                            rotate(0 + this.rightfingers);
                            fill(this.dark);
                            rect(-5, 0, 10, 25, 5);
                            fill(this.medium);
                            rect(0, 0, 4, 24, 5);
                        popMatrix();
                        
                    popMatrix();
                popMatrix();
            popMatrix();
        
        
        } //right arm
        
        {
            //left arm
            pushMatrix();
                translate(404, 345);
                rotate(-22 + this.lefttop);
                //top of arm
                fill(this.dark); //arm right top
                rect(-12, 0, 24, 80);
                fill(this.medium); //arm right top shadow
                rect(3, 0, 9, 80);
                
                fill(this.light); //arm right top round
                ellipse(0, 0, 40, 40);
                
                //bottom of arm
                pushMatrix();
                    translate(0, 80);
                    rotate(18 + this.leftbottom);
                    
                    fill(this.dark); //arm left bottom
                    rect(-12, 0, 24, 70);
                    fill(this.medium); //arm left bottom shadow
                    //rect(-3, 0, 13, 70);
                    rect(3, 0, 9, 70);
                    
                    fill(this.light); //arm left bottom round
                    ellipse(0, 0, 34, 34);
                    
                    //hands
                    pushMatrix();
                        translate(0, 70);
                        rotate(0 + this.lefthand);
                        
                        pushStyle();
                            rectMode(CENTER);
                            fill(this.light); //hand right - light
                            rect(0, 0, 45, 25, 8);
                            fill(this.shade); //hand right - shadow
                            rect(0, 0, 41, 16, 8);
                        popStyle();
                        
                        //fingers
                        pushMatrix(); //hand right - finger right
                            translate(-10, 5);
                            rotate(0 - this.leftfingers);
                            fill(this.dark);
                            rect(-5, 0, 10, 25, 5);
                            fill(this.medium);
                            rect(0, 0, 4, 24, 5);
                        popMatrix();
                        pushMatrix(); //hand right - finger left
                            translate(10, 5);
                            rotate(0 + this.leftfingers);
                            fill(this.dark);
                            rect(-5, 0, 10, 25, 5);
                            fill(this.medium);
                            rect(0, 0, 4, 24, 5);
                        popMatrix();
                        
                    popMatrix();
                popMatrix();
            popMatrix();
        
        } //left arm
        
        image(this.robotImage, 0, 0);
    };
    
    this.run = function() {
        this.update();
        this.flash();
        this.draw();
    };
};

var scene = new Scene();
var robot = new Robot();

draw = function() {
    background(255, 255, 255);
    background(230, 230, 202);
    
    scene.draw();
    robot.run();
};

